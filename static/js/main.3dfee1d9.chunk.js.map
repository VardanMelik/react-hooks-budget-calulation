{"version":3,"sources":["components/ExpenseItem.js","components/ExpenseList.js","components/ExpenseForm.js","components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseItem","expense","charge","id","amount","className","aria-label","ExpenseList","expenses","map","key","length","ExpenseForm","handleCharge","handleAmount","handleSubmit","onSubmit","htmlFor","type","name","placeholder","value","onChange","Alert","initialExpenses","uuid","App","useState","setExpenses","setCharge","setAmount","e","target","preventDefault","singleExpense","console","log","reduce","acc","curr","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dfee1d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {MdEdit, MdDelete} from 'react-icons/md'\r\n\r\nconst ExpenseItem = ({expense}) => {\r\n    const {id, charge, amount} = expense\r\n\r\n    return (\r\n        <li className=\"item\">\r\n            <div className=\"info\">\r\n                <span className=\"expense\">\r\n                    {charge}\r\n                </span>\r\n\r\n                <span className=\"amount\">\r\n                    ${amount}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <button className=\"edit-btn\" aria-label>\r\n                    <MdEdit />\r\n                </button>\r\n                <button className=\"clear-btn\" aria-label>\r\n                    <MdDelete />\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem\r\n","import React from 'react'\r\nimport Item from './ExpenseItem'\r\nimport {MdDelete} from 'react-icons/md'\r\n\r\nconst ExpenseList = ({expenses}) => {\r\n    return (\r\n        <>\r\n          <ul className=\"list\">\r\n              {expenses.map( (expense) => {\r\n                return <Item key={expense.id} expense={expense} />\r\n              })}\r\n            </ul> \r\n            {expenses.length > 0 && <button className=\"btn\">\r\n                Clean Expenses\r\n                <MdDelete className=\"btn-icon\" />\r\n                </button>}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenseList\r\n","import React from 'react'\r\nimport {MdSend} from 'react-icons/md'\r\n\r\n// Arrow Function\r\nconst ExpenseForm = ({charge, amount, handleCharge, handleAmount, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-center\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"charge\">charge</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"charge\"\r\n                        name=\"charge\"\r\n                        placeholder=\"e.g. rent\" \r\n                        value={charge}\r\n                        onChange={handleCharge}\r\n                    />\r\n\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"amount\">amount</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control\" \r\n                        id=\"amount\"\r\n                        name=\"amout\"\r\n                        placeholder=\"e.g. 100\" \r\n                        value={amount}\r\n                        onChange={handleAmount}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn\">\r\n                Submit\r\n                <MdSend className=\"btn-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm\r\n","import React from 'react'\r\n\r\nconst Alert = () => {\r\n    return (\r\n        <div>\r\n            Hello from Alert\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react';\nimport './App.css'\nimport ExpenseList from './components/ExpenseList'\nimport ExpenseForm from './components/ExpenseForm'\nimport Alert from './components/Alert'\nimport uuid from 'uuid/v4'\n\nconst initialExpenses = [\n  { id: uuid(), charge: \"rent\", amount: 1600},\n  { id: uuid(), charge: \"car payment\", amount: 400},\n  { id: uuid(), charge: \"credit card bill\", amount: 800}\n]\n\nfunction App() {\n  // ******* state values  *******************\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses)\n  \n  // single expense\n  const [charge, setCharge] = useState('')\n  // ******* functionality  *******************\n\n  // single amount \n  const [amount, setAmount] = useState('')\n  // ******* functionality  *******************\n\n  const handleCharge = e => {\n    setCharge(e.target.value)\n  }\n\n  const handleAmount = e => {\n    setAmount(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if(charge !==\"\" && amount > 0){\n      const singleExpense = {\n        id: uuid(),\n        charge,\n        amount\n      }\n      setExpenses([...expenses, singleExpense])\n      setCharge(\"\")\n      setAmount(\"\")\n      console.log(charge, amount)\n    }else{\n      // handle alert called \n    }\n    \n  }\n  \n  return (\n    <>\n      <Alert />\n      <h1>Budget Calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm \n          charge={charge} \n          amount={amount}\n          handleAmount={handleAmount}\n          handleCharge={handleCharge}\n          handleSubmit={handleSubmit} \n        />\n        <ExpenseList expenses={expenses}/>\n      </main>\n      <h1>Total Spending: <span className=\"total\">\n        $\n        {expenses.reduce( (acc, curr) => {\n          return (acc + parseInt(curr.amount))\n        }, 0)}\n        </span></h1>\n\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}